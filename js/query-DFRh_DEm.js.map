{"version":3,"file":"query-DFRh_DEm.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  })?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? 1e3, 1e3);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","equalItems","i","includes","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","shouldThrowError","throwOnError","params","focusManager","_a","super","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_b","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_c","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","__privateMethod","manual","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","context","fetchFn","queryFnContext","persister","behavior","onFetch","onSettled","WeakSet","action","fetchState","reducer","onQueryUpdate","QueryCache","_e","_queries","Map","build","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_f","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryObserver","_QueryObserver_instances","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","experimental_prefetchInRender","bindMethods","shouldFetchOnMount","executeFetch_fn","updateResult","updateTimers_fn","shouldFetchOn","refetchOnWindowFocus","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","getOptimisticResult","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","Proxy","target","trackProp","Reflect","getCurrentQuery","fetchOptimistic","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","selectError","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notify_fn","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldNotifyListeners","time","refetchInterval","updateRefetchInterval_fn","nextInterval","setInterval","refetchIntervalInBackground","clearInterval","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","MutationObserver","_MutationObserver_instances","_currentMutation","_mutateOptions","updateResult_fn","mutate","isIdle","QueryClientContext","React.createContext","createContext","useQueryClient","queryClient","React.useContext","useContext","QueryClientProvider","children","React.useEffect","jsx","Provider","IsRestoringContext","QueryErrorResetBoundaryContext","isReset","clearReset","createValue","errorResetBoundary","useBaseQuery","Observer","isRestoring","_experimental_beforeQuery","clamp","originalStaleTime","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","isNewCacheEntry","React.useState","useState","shouldSubscribe","subscribed","reactExports","useSyncExternalStore","React.useCallback","useCallback","onStoreChange","unsubscribe","shouldSuspend","getHasError","_experimental_afterQuery","willFetch","finally","useQuery","useMutation","React.useSyncExternalStore","mutateOptions","mutateAsync"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}